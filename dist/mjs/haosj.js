import { ClassData, Subject, SubjectDay } from "./class_data.js";
import { useExampleUrlData, useUrlData } from "./utils/functions.js";
var classes = new Map();
/**
 * ## Haosj (HaoSubject)
 * ‡πÇ‡∏î‡∏¢ ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏±‡∏ó‡∏ó‡πå ‡πÄ‡∏ó‡∏û‡∏™‡∏∏‡∏ò‡∏≤ ‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö [‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢](https://th.wikipedia.org/wiki/%E0%B8%81%E0%B8%A3%E0%B8%B0%E0%B8%95%E0%B9%88%E0%B8%B2%E0%B8%A2)üêá‡∏°‡∏≤‡∏Å‡πÜ
 * ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏î‡∏π[‡∏•‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î](https://raw.githubusercontent.com/karnhao/haosj/main/README.md)
 */
const haosj = {
    //Classes
    ClassData,
    Subject,
    SubjectDay,
    //Functions
    useExampleUrlData,
    useUrlData,
    /**
     * ‡∏Ç‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ id.
     * @param id
     * @returns undefined ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ.
     */
    getClass(id) {
        return classes.get(id);
    },
    /**
     * ‡πÄ‡∏ã‡∏ï‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ClassData. (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô `addClass()` ‡πÅ‡∏ó‡∏ô
     * @param id
     * @param classData ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
     * @deprecated
     */
    setClass(id, classData) {
        classData.update();
        classes.set(id, classData);
    },
    /**
     * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ô haosj ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ClassData.
     * @param id
     * @param classData ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
     */
    addClass(id, classData) {
        classData.update();
        classes.set(id, classData);
    },
    /**
     * ‡πÄ‡∏ã‡∏ï‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó object. (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï) ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô `addClassRaw()` ‡πÅ‡∏ó‡∏ô
     * @param id
     * @param data ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•;
     * @deprecated
     */
    setClassRaw(id, data, showMessage) {
        let c = new ClassData();
        c.update(showMessage, data);
        this.setClass(id, c);
    },
    /**
     * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ô haosj ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó object.
     * @param id
     * @param data ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•;
     */
    addClassRaw(id, data, showMessage) {
        let c = new ClassData();
        c.update(showMessage, data);
        this.addClass(id, c);
    },
    /**
     * ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ id.
     * @param id
     */
    deleteClass(id) {
        classes.delete(id);
    },
    /**
     * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î.
     * @returns ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î.
     */
    getValue() {
        return classes;
    },
    each(callbackfn) {
        classes.forEach(callbackfn);
    },
    /**
     * ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• id ‡πÅ‡∏•‡∏∞ ClassData ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô haosj.
     */
    clear() {
        classes.clear();
    },
    /**
     * ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö true ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ id ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô haosj ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö false.
     */
    has(id) {
        return classes.has(id);
    },
    /**
     * ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö true ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô ClassData ‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö false.
     * @param data ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
     */
    isReadable(data) {
        try {
            new ClassData().setData(data, false);
            return true;
        }
        catch {
            return false;
        }
    },
    /**
     * ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Obj ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô.
     * @param {RawClassData} obj
     * @param {boolean} showMessage
     */
    getClassByObj(obj, showMessage = false) {
        let c = new ClassData();
        c.update(showMessage, obj);
        return c;
    }
};
export default haosj;
